import 'package:LittleBuddy/views/home.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:quickalert/models/quickalert_type.dart';
import 'package:quickalert/widgets/quickalert_dialog.dart';

class Mapnaja extends StatefulWidget {
  const Mapnaja({super.key});

  @override
  State<Mapnaja> createState() => _MapnajaState();
}

class _MapnajaState extends State<Mapnaja> {
  // ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
  void showAlert() {
    QuickAlert.show(
        context: context,
        title: "‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏ö‡πà‡∏ó‡∏≥üòÖ",
        type: QuickAlertType.error);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ Clinic"),
        centerTitle: true,
        leading: IconButton(
          onPressed: () {
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(builder: (context) => Home()),
            );
          },
          icon: Icon(Icons.home),
        ),
        actions: [
          IconButton(
            onPressed: () {
              showAlert();
            },
            icon: Icon(Icons.check),
          ),
        ],
      ),
      body: const MapScreen(),
    );
  }
}

class MapScreen extends StatefulWidget {
  const MapScreen({super.key});

  @override
  State<MapScreen> createState() => _MapScreenState();
}

class _MapScreenState extends State<MapScreen> {
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÑ‡∏ß‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  static const _initialCameraPosition = CameraPosition(
    target: LatLng(
      13.824148,
      100.5146787,
    ),
    zoom: 15,
  );

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÑ‡∏ß‡πâ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏´‡∏•‡∏±‡∏Å
  late GoogleMapController _googleMapController;

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Marker ‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡∏£‡∏¥‡∏ô‡∏¥‡∏Ñ‡πÑ‡∏ß‡πâ
  late Marker _Shop1;
  late Marker _Shop2;
  late Marker _Shop3;

  @override
  void dispose() {
    _googleMapController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Marker ‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡∏£‡∏¥‡∏ô‡∏¥‡∏Ñ‡πÑ‡∏ß‡πâ
    // List<Widget> DataMarker = [];
    // // DataMarker.add(Text("‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 1"));
    // // DataMarker.add(Text("‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 2"));
    // // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á Marker
    // for (var i = 0; i < 5; i++) {
    //   DataMarker.add(Text(
    //     "‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà ${i + 1}",
    //   ));
    // }

    return Scaffold(
      // ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏π‡∏õ ‡∏à‡∏±‡∏î‡πÅ‡∏≠‡∏û
      body: Column(
        // ‡πÅ‡∏ö‡πà‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏™‡πà‡∏ß‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Column
        children: [
          // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏°‡∏≤ ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á map
          Padding(
            padding: const EdgeInsets.all(10.0),
            child: Container(
              // ‡∏ö‡∏≠‡∏Å‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Å‡∏•‡πà‡∏≠‡∏á
              decoration: BoxDecoration(color: Colors.green),
              height: MediaQuery.of(context).size.height *
                  0.4, // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á Container ‡πÄ‡∏õ‡πá‡∏ô 40% ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
              child: GoogleMap(
                myLocationButtonEnabled: false,
                zoomControlsEnabled: false,
                initialCameraPosition: _initialCameraPosition,
                onMapCreated: (controller) => _googleMapController = controller,
                markers: {Marker(markerId: const MarkerId('shop1'))},
                //onLongPress: _addMarker,
              ),
            ),
          ),
          // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏°‡∏≤ ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á ‡πÄ‡∏°‡∏ô‡∏π
          Container(
            // ‡∏ö‡∏≠‡∏Å‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Å‡∏•‡πà‡∏≠‡∏á
            decoration: BoxDecoration(
                //color: Color.fromARGB(255, 167, 196, 219),
                borderRadius: BorderRadius.circular(20)),
            height: MediaQuery.of(context).size.height *
                0.4, // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á Container ‡πÄ‡∏õ‡πá‡∏ô 40% ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
            child: Padding(
                padding: const EdgeInsets.all(8.0),
                child: ListView.builder(
                    itemCount: 15, // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á
                    itemBuilder: (BuildContext context, int index) {
                      return Padding(
                        padding: const EdgeInsets.all(5.0),
                        child: Container(
                          // ‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                          decoration: BoxDecoration(
                            // border: Border.all(
                            //   color: Color.fromARGB(255, 118, 133, 145),
                            //   width: 1.0,
                            // ),
                            borderRadius: BorderRadius.circular(5),
                            color: Color.fromARGB(255, 192,247,248) // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á Container ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                          ),
                          // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÉ‡∏ô
                          child: ListTile(

                              // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏´‡∏•‡∏±‡∏Å
                              title: Text(
                                "‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà ${index + 1}",
                                style: TextStyle(fontSize: 25),
                              ),
                              // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏£‡∏≠‡∏á
                              subtitle: Text("‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏î‡∏µ‡∏ô‡∏∞"),
                              // ‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡πâ‡∏≤‡∏ô
                              onTap: () {
                                print("‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà ${index + 1}");
                              }),
                        ),
                      );
                    })),
          ),
        ],
      ),
      // ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏≠‡∏¢ ‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
      floatingActionButton: FloatingActionButton(
        backgroundColor: Theme.of(context).primaryColor,
        onPressed: () => _googleMapController.animateCamera(
            CameraUpdate.newCameraPosition(_initialCameraPosition)),
        child: Icon(Icons.explore), // ‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå Icon ‡∏•‡∏≠‡∏¢‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á
      ),
    );
  }
}

// ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• list
List<Widget> getData(int count) {
  List<Widget> DataMarker = [];
  for (var i = 0; i < count; i++) {
    // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ txt ‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô list
    var txt = Text(
      "‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà ${i + 1}",
      style: TextStyle(fontSize: 25),
    );
    // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ txt2 ‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô list ‡πÅ‡∏ö‡∏ö listtile
    var txt2 = ListTile(
      title: Text(
        "‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà ${i + 1}",
        style: TextStyle(fontSize: 25),
      ),
      subtitle: Text("‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏î‡∏µ‡∏ô‡∏∞"),
    );
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô list
    DataMarker.add(txt2);
  }
  return DataMarker;
}
